Twitter accounts:
Gmail: UNHSecuroBot@gmail.com
password: nhBlue22

Gmails for tablets:
unhsecurobotmaster@gmail.com
unhsecurobotslave@gmail.com
passwords: nhBlue22

Tablet Password: 0652

UNHSecuroBot, nhBlue22

TODO: (Orginized in order of priority (most important first
- add fact class - Mon 7/27
- seperate status and retweet in to two seperate entities. clean up any other messy things in the twitter class

- design and construct the physical body - Tue 7/28

- design and construct the mouth (LEDs amplified audio signal driver using opamp?)
- add a way for users to type their twitter handle to forward links to them for them to read more
~ add speech to text (might be impracticle for a noisy hallway)- have specific voice commands like:
    "Hey <name>" - gets the attention of the robot. The following commands can then be used:
    "tell me a joke" - recognizes key word joke, calls the joke function and tells a random joke
    "whats new/up?/how is it going?" - recognizes this and chooses a security topic at random (new twitter feed, joke, RSS, security tip, trending article)
    "tell me something about computer security" - recognizes something and computer security and gives a tip about personal computer security
    if no command is found, say "I dont know what you said, but <name> says <something>" random name(50 cent or something stupid), latest tweet
~ add survey class - Mon 7/27
    ~ surveys results are compiled and tweeted

TODO COMPLETED TASKS:
x make the content arrays Queues so that the content is switched out on a regular basis The link will be added to a QUEUE data structure (first in, first out)  - Mon 7/27
    - one issue: When should content be dequeued? fixed size queue?
x split the work up between two android devices (both devices connect to the same IOIO, one is eyes, one is content) - Mon 7/27
x add an interaction timer - the timer automatically quits out of activities if there is no user action taken after X time
x add method for parsing only necessary data from twitter/RSS/webpage feeds (leave out links, hash-tags, etc)
~ make a seperate twitter account for the robot to read tweets to generate the content (quiz links, RSS feed links, jokes, tips, etc) based on hashtags
    i.e. #securobotquiz will be a quiz link.
x stop reading IR while in another process or speaking
x make a twitter account for the robot to post tweets
x split the eyes into right/left open/closed
x add text to speech
x add android ioio libraries

x add twitter crawler
x add RSSfeed crawler
x add cyber security jokes
    - use twitter to add jokes to the joke list
x add tips
    - use twitter for tip data so that the tips database can be updated in the future
x work on developing the overall data structure of app decision making/functions
x add webpage crawler - use links associated with RSS feeds to get URLs for the articles
x add quizes
    when the user finishes it takes a picture of the user and publishes the picture via twitter in the form
    of a certificate
    - use onlinequizecreator.com to create the quizes
    - online quiz creator uses javascript so I should be able to interface between the page and the app - figure out how to do this
x implement ActionEngine to decide what actions to take for a trigger (quiz, fun fact, joke, RSS feed, etc)
